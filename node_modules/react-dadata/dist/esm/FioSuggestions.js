var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import React from 'react';
import { BaseSuggestions } from './BaseSuggestions';
import { HighlightWords } from './HighlightWords';
var FioSuggestions = /** @class */ (function (_super) {
    __extends(FioSuggestions, _super);
    function FioSuggestions() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.loadSuggestionsUrl = 'https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio';
        _this.getLoadSuggestionsData = function () {
            var _a = _this.props, count = _a.count, filterGender = _a.filterGender, filterParts = _a.filterParts;
            var query = _this.state.query;
            var requestPayload = {
                query: query,
                count: count || 10,
            };
            // Ограничение по полу
            if (filterGender) {
                requestPayload.gender = filterGender;
            }
            // Ограничение по части ФИО
            if (filterParts) {
                requestPayload.parts = filterParts;
            }
            return requestPayload;
        };
        _this.getSuggestionKey = function (suggestion) {
            return "name:".concat(suggestion.data.name || '', "surname:").concat(suggestion.data.surname || '', "patronymic:").concat(suggestion.data.patronymic || '');
        };
        _this.renderOption = function (suggestion) {
            var _a = _this.props, renderOption = _a.renderOption, highlightClassName = _a.highlightClassName;
            var query = _this.state.query;
            return renderOption ? (renderOption(suggestion, query)) : (React.createElement("div", null,
                React.createElement(HighlightWords, { highlightClassName: highlightClassName || 'react-dadata--highlighted', words: _this.getHighlightWords(), text: suggestion.value })));
        };
        return _this;
    }
    return FioSuggestions;
}(BaseSuggestions));
export { FioSuggestions };
