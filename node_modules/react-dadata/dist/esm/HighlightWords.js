var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import React, { PureComponent } from 'react';
import highlightWords from 'highlight-words';
var HighlightWords = /** @class */ (function (_super) {
    __extends(HighlightWords, _super);
    function HighlightWords() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HighlightWords.prototype.render = function () {
        var _a = this.props, text = _a.text, words = _a.words, highlightClassName = _a.highlightClassName, _b = _a.tagName, tagName = _b === void 0 ? 'span' : _b;
        var query = typeof words === 'string' ? words : words.join(' ');
        var chunks = highlightWords({ text: text, query: query });
        return (React.createElement("span", { "aria-label": text }, chunks.map(function (chunk) {
            if (!chunk.match) {
                return React.createElement("span", { key: chunk.key, "aria-hidden": true }, chunk.text);
            }
            var Component = tagName;
            return (React.createElement(Component, { key: chunk.key, className: highlightClassName, "aria-hidden": true }, chunk.text));
        })));
    };
    return HighlightWords;
}(PureComponent));
export { HighlightWords };
