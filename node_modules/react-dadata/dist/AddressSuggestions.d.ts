import { ReactNode } from 'react';
import { BaseProps, BaseSuggestions } from './BaseSuggestions';
import { DaDataAddress, DaDataAddressBounds, DaDataSuggestion } from './types';
type Dictionary = {
    [key: string]: any;
};
interface Props extends BaseProps<DaDataAddress> {
    filterLanguage?: 'ru' | 'en';
    filterFromBound?: DaDataAddressBounds;
    filterToBound?: DaDataAddressBounds;
    filterLocations?: Dictionary[];
    filterLocationsBoost?: Dictionary[];
    filterRestrictValue?: boolean;
}
export declare class AddressSuggestions extends BaseSuggestions<DaDataAddress, Props> {
    loadSuggestionsUrl: string;
    getLoadSuggestionsData: () => Record<string, unknown>;
    protected renderOption: (suggestion: DaDataSuggestion<DaDataAddress>) => ReactNode;
}
export {};
