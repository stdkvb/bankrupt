import {
  require_react
} from "./chunk-4D5CYJYK.js";
import {
  __commonJS,
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/shallowequal/index.js
var require_shallowequal = __commonJS({
  "node_modules/shallowequal/index.js"(exports, module) {
    module.exports = function shallowEqual2(objA, objB, compare, compareContext) {
      var ret = compare ? compare.call(compareContext, objA, objB) : void 0;
      if (ret !== void 0) {
        return !!ret;
      }
      if (objA === objB) {
        return true;
      }
      if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
        return false;
      }
      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);
      if (keysA.length !== keysB.length) {
        return false;
      }
      var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
      for (var idx = 0; idx < keysA.length; idx++) {
        var key = keysA[idx];
        if (!bHasOwnProperty(key)) {
          return false;
        }
        var valueA = objA[key];
        var valueB = objB[key];
        ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;
        if (ret === false || ret === void 0 && valueA !== valueB) {
          return false;
        }
      }
      return true;
    };
  }
});

// node_modules/debounce/index.js
var require_debounce = __commonJS({
  "node_modules/debounce/index.js"(exports, module) {
    function debounce2(func, wait, immediate) {
      var timeout, args, context, timestamp, result;
      if (null == wait)
        wait = 100;
      function later() {
        var last = Date.now() - timestamp;
        if (last < wait && last >= 0) {
          timeout = setTimeout(later, wait - last);
        } else {
          timeout = null;
          if (!immediate) {
            result = func.apply(context, args);
            context = args = null;
          }
        }
      }
      ;
      var debounced = function() {
        context = this;
        args = arguments;
        timestamp = Date.now();
        var callNow = immediate && !timeout;
        if (!timeout)
          timeout = setTimeout(later, wait);
        if (callNow) {
          result = func.apply(context, args);
          context = args = null;
        }
        return result;
      };
      debounced.clear = function() {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }
      };
      debounced.flush = function() {
        if (timeout) {
          result = func.apply(context, args);
          context = args = null;
          clearTimeout(timeout);
          timeout = null;
        }
      };
      return debounced;
    }
    debounce2.debounce = debounce2;
    module.exports = debounce2;
  }
});

// node_modules/react-dadata/dist/esm/AddressSuggestions.js
var import_react3 = __toESM(require_react());

// node_modules/react-dadata/dist/esm/BaseSuggestions.js
var import_react = __toESM(require_react());
var import_shallowequal = __toESM(require_shallowequal());
var import_debounce = __toESM(require_debounce());

// node_modules/nanoid/index.browser.js
var nanoid = (size = 21) => crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {
  byte &= 63;
  if (byte < 36) {
    id += byte.toString(36);
  } else if (byte < 62) {
    id += (byte - 26).toString(36).toUpperCase();
  } else if (byte > 62) {
    id += "-";
  } else {
    id += "_";
  }
  return id;
}, "");

// node_modules/react-dadata/dist/esm/request.js
var xhr;
var makeRequest = function(method, endpoint, data, cache, onReceiveData) {
  if (xhr) {
    xhr.abort();
  }
  var cacheKey;
  if (cache) {
    cacheKey = cache.serializeCacheKey({
      headers: data.headers,
      body: data.json,
      url: endpoint,
      method
    });
    var cachedData = cache.get(cacheKey);
    if (cachedData) {
      onReceiveData(cachedData);
      return;
    }
  }
  xhr = new XMLHttpRequest();
  xhr.open(method, endpoint);
  if (data.headers) {
    Object.entries(data.headers).forEach(function(_a) {
      var header = _a[0], headerValue = _a[1];
      xhr.setRequestHeader(header, headerValue);
    });
  }
  xhr.send(JSON.stringify(data.json));
  xhr.onreadystatechange = function() {
    var _a;
    if (!xhr || xhr.readyState !== 4) {
      return;
    }
    if (xhr.status === 200) {
      var payload = (_a = JSON.parse(xhr.response)) === null || _a === void 0 ? void 0 : _a.suggestions;
      if (payload) {
        cache === null || cache === void 0 ? void 0 : cache.set(cacheKey, payload);
        onReceiveData(payload);
      }
    }
  };
};

// node_modules/react-dadata/dist/esm/http-cache/abstract.js
var HttpCache = (
  /** @class */
  function() {
    function HttpCache2() {
    }
    HttpCache2.prototype.serializeCacheKey = function(payload) {
      try {
        return JSON.stringify(payload);
      } catch (_e) {
        return payload.url + String(Math.random());
      }
    };
    return HttpCache2;
  }()
);

// node_modules/react-dadata/dist/esm/http-cache/default-cache.js
var __extends = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var minute = 6e4;
var DefaultHttpCache = (
  /** @class */
  function(_super) {
    __extends(DefaultHttpCache2, _super);
    function DefaultHttpCache2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this._map = /* @__PURE__ */ new Map();
      _this._ttl = 10 * minute;
      return _this;
    }
    Object.defineProperty(DefaultHttpCache2, "shared", {
      /**
       * Синглтон
       * @example
       * ```ts
       * cache.shared.get('key');
       * ```
       */
      get: function() {
        if (!DefaultHttpCache2.sharedInstance) {
          DefaultHttpCache2.sharedInstance = new DefaultHttpCache2();
        }
        return DefaultHttpCache2.sharedInstance;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DefaultHttpCache2.prototype, "ttl", {
      /**
       * Время жизни кеша в миллисекундах
       * @example
       * ```ts
       * cache.ttl = 60000;
       * cache.ttl = Infinity;
       * cache.tll = 0;
       *
       * // негативные значения игнорируются
       * cache.ttl = -1;
       * cache.ttl = Number.NEGATIVE_INFINITY;
       * ```
       */
      get: function() {
        return this._ttl;
      },
      set: function(ttl) {
        if (typeof ttl === "number" && ttl >= 0) {
          this._ttl = ttl;
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DefaultHttpCache2.prototype, "size", {
      /**
       * Количество элементов в кеше
       */
      get: function() {
        return this._map.size;
      },
      enumerable: false,
      configurable: true
    });
    DefaultHttpCache2.prototype.get = function(key) {
      var data = this._map.get(key);
      if (!data)
        return null;
      if (data.expires <= Date.now()) {
        this.delete(key);
        return null;
      }
      return data.data;
    };
    DefaultHttpCache2.prototype.set = function(key, data) {
      this._map.set(key, {
        data,
        expires: Date.now() + this.ttl
      });
      return this;
    };
    DefaultHttpCache2.prototype.delete = function(key) {
      this._map.delete(key);
      return this;
    };
    DefaultHttpCache2.prototype.reset = function() {
      this._map.clear();
      return this;
    };
    return DefaultHttpCache2;
  }(HttpCache)
);

// node_modules/react-dadata/dist/esm/BaseSuggestions.js
var __extends2 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var BaseSuggestions = (
  /** @class */
  function(_super) {
    __extends2(BaseSuggestions2, _super);
    function BaseSuggestions2(props) {
      var _this = _super.call(this, props) || this;
      _this.loadSuggestionsUrl = "";
      _this.dontPerformBlurHandler = false;
      _this.getSuggestionsUrl = function() {
        var url = _this.props.url;
        return url || _this.loadSuggestionsUrl;
      };
      _this.setupDebounce = function(delay2) {
        if (typeof delay2 === "number" && delay2 > 0) {
          _this.fetchSuggestions = (0, import_debounce.debounce)(_this.performFetchSuggestions, delay2);
        } else {
          _this.fetchSuggestions = _this.performFetchSuggestions;
        }
      };
      _this.fetchSuggestions = function() {
      };
      _this.handleInputFocus = function(event) {
        _this.setState({ isFocused: true });
        var suggestions = _this.state.suggestions;
        if (suggestions.length === 0) {
          _this.fetchSuggestions();
        }
        var inputProps = _this.props.inputProps;
        if (inputProps && inputProps.onFocus) {
          inputProps.onFocus(event);
        }
      };
      _this.handleInputBlur = function(event) {
        var _a2 = _this.state, suggestions = _a2.suggestions, suggestionIndex = _a2.suggestionIndex;
        var _b = _this.props, selectOnBlur = _b.selectOnBlur, inputProps = _b.inputProps;
        _this.setState({ isFocused: false });
        if (suggestions.length === 0) {
          _this.fetchSuggestions();
        }
        if (selectOnBlur && !_this.dontPerformBlurHandler) {
          if (suggestions.length > 0) {
            var suggestionIndexToSelect = suggestionIndex >= 0 && suggestionIndex < suggestions.length ? suggestionIndex : 0;
            _this.selectSuggestion(suggestionIndexToSelect, true);
          }
        }
        _this.dontPerformBlurHandler = false;
        if (inputProps && inputProps.onBlur) {
          inputProps.onBlur(event);
        }
      };
      _this.handleInputChange = function(event) {
        var value2 = event.target.value;
        var inputProps = _this.props.inputProps;
        if (_this.didMount) {
          _this.setState({ query: value2, inputQuery: value2, displaySuggestions: !!value2 }, function() {
            _this.fetchSuggestions();
          });
        }
        if (inputProps && inputProps.onChange) {
          inputProps.onChange(event);
        }
      };
      _this.handleInputKeyDown = function(event) {
        _this.handleKeyboard(event);
        var inputProps = _this.props.inputProps;
        if (inputProps && inputProps.onKeyDown) {
          inputProps.onKeyDown(event);
        }
      };
      _this.handleInputKeyPress = function(event) {
        _this.handleKeyboard(event);
        var inputProps = _this.props.inputProps;
        if (inputProps && inputProps.onKeyPress) {
          inputProps.onKeyPress(event);
        }
      };
      _this.handleKeyboard = function(event) {
        var _a2 = _this.state, suggestions = _a2.suggestions, suggestionIndex = _a2.suggestionIndex, inputQuery = _a2.inputQuery;
        if (event.which === 40) {
          event.preventDefault();
          if (suggestionIndex < suggestions.length - 1) {
            var newSuggestionIndex = suggestionIndex + 1;
            var newInputQuery = suggestions[newSuggestionIndex].value;
            if (_this.didMount) {
              _this.setState({ suggestionIndex: newSuggestionIndex, query: newInputQuery });
            }
          }
        } else if (event.which === 38) {
          event.preventDefault();
          if (suggestionIndex >= 0) {
            var newSuggestionIndex = suggestionIndex - 1;
            var newInputQuery = newSuggestionIndex === -1 ? inputQuery : suggestions[newSuggestionIndex].value;
            if (_this.didMount) {
              _this.setState({ suggestionIndex: newSuggestionIndex, query: newInputQuery });
            }
          }
        } else if (event.which === 13) {
          event.preventDefault();
          if (suggestionIndex >= 0) {
            _this.selectSuggestion(suggestionIndex);
          }
        }
      };
      _this.performFetchSuggestions = function() {
        var _a2 = _this.props, minChars = _a2.minChars, token = _a2.token;
        var query = _this.state.query;
        if (typeof minChars === "number" && minChars > 0 && query.length < minChars) {
          _this.setState({ suggestions: [], suggestionIndex: -1 });
          return;
        }
        makeRequest("POST", _this.getSuggestionsUrl(), {
          headers: {
            Accept: "application/json",
            Authorization: "Token ".concat(token),
            "Content-Type": "application/json"
          },
          json: _this.getLoadSuggestionsData()
        }, _this.httpCache, function(suggestions) {
          if (_this.didMount) {
            _this.setState({ suggestions, suggestionIndex: -1 });
          }
        });
      };
      _this.onSuggestionClick = function(index, event) {
        event.stopPropagation();
        _this.selectSuggestion(index);
      };
      _this.selectSuggestion = function(index, isSilent) {
        if (isSilent === void 0) {
          isSilent = false;
        }
        var suggestions = _this.state.suggestions;
        var _a2 = _this.props, selectOnBlur = _a2.selectOnBlur, onChange = _a2.onChange;
        if (suggestions.length >= index - 1) {
          var suggestion = suggestions[index];
          if (selectOnBlur) {
            _this.dontPerformBlurHandler = true;
          }
          _this.setState({ query: suggestion.value, inputQuery: suggestion.value, displaySuggestions: false }, function() {
            if (!isSilent) {
              _this.fetchSuggestions();
              setTimeout(function() {
                return _this.setCursorToEnd(_this.textInput);
              });
            }
          });
          if (onChange) {
            onChange(suggestion);
          }
        }
      };
      _this.setCursorToEnd = function(element) {
        if (element) {
          var valueLength = element.value.length;
          if (element.selectionStart || element.selectionStart === 0) {
            element.selectionStart = valueLength;
            element.selectionEnd = valueLength;
            element.focus();
          }
        }
      };
      _this.getHighlightWords = function() {
        var inputQuery = _this.state.inputQuery;
        var wordsToPass = ["г", "респ", "ул", "р-н", "село", "деревня", "поселок", "пр-д", "пл", "к", "кв", "обл", "д"];
        var words = inputQuery.replace(",", "").split(" ");
        words = words.filter(function(word) {
          return wordsToPass.indexOf(word) < 0;
        });
        return words;
      };
      _this.getSuggestionKey = function(suggestion) {
        return suggestion.value;
      };
      _this.focus = function() {
        if (_this.textInput) {
          _this.textInput.focus();
        }
      };
      _this.setInputValue = function(value2) {
        _this.setState({ query: value2 || "", inputQuery: value2 || "" });
      };
      _this.didMount = false;
      var _a = _this.props, defaultQuery = _a.defaultQuery, value = _a.value, delay = _a.delay;
      var valueQuery = value ? value.value : void 0;
      _this.setupDebounce(delay);
      _this.state = {
        query: defaultQuery || valueQuery || "",
        inputQuery: defaultQuery || valueQuery || "",
        isFocused: false,
        displaySuggestions: true,
        suggestions: [],
        suggestionIndex: -1
      };
      return _this;
    }
    BaseSuggestions2.prototype.componentDidMount = function() {
      this.didMount = true;
    };
    BaseSuggestions2.prototype.componentDidUpdate = function(prevProps) {
      var _a = this.props, value = _a.value, delay = _a.delay;
      var _b = this.state, query = _b.query, inputQuery = _b.inputQuery;
      if (!(0, import_shallowequal.default)(prevProps.value, value)) {
        var newQuery = value ? value.value : "";
        if (query !== newQuery || inputQuery !== newQuery) {
          this.setState({ query: newQuery, inputQuery: newQuery });
        }
      }
      if (delay !== prevProps.delay) {
        this.setupDebounce(delay);
      }
    };
    BaseSuggestions2.prototype.componentWillUnmount = function() {
      this.didMount = false;
    };
    Object.defineProperty(BaseSuggestions2.prototype, "uid", {
      get: function() {
        if (this.props.uid) {
          return this.props.uid;
        }
        if (!this._uid) {
          this._uid = nanoid();
        }
        return this._uid;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(BaseSuggestions2.prototype, "httpCache", {
      get: function() {
        var _a = this.props, cacheProp = _a.httpCache, ttl = _a.httpCacheTtl;
        if (!cacheProp) {
          return null;
        }
        if (cacheProp instanceof HttpCache) {
          return cacheProp;
        }
        var cache = DefaultHttpCache.shared;
        if (typeof ttl === "number") {
          cache.ttl = ttl;
        }
        return cache;
      },
      enumerable: false,
      configurable: true
    });
    BaseSuggestions2.prototype.render = function() {
      var _this = this;
      var _a = this.props, inputProps = _a.inputProps, hintText = _a.hintText, containerClassName = _a.containerClassName, hintClassName = _a.hintClassName, suggestionsClassName = _a.suggestionsClassName, suggestionClassName = _a.suggestionClassName, currentSuggestionClassName = _a.currentSuggestionClassName, customInput = _a.customInput, children = _a.children;
      var _b = this.state, query = _b.query, isFocused = _b.isFocused, suggestions = _b.suggestions, suggestionIndex = _b.suggestionIndex, displaySuggestions = _b.displaySuggestions;
      var Component = typeof customInput !== "undefined" ? customInput : "input";
      var optionsExpanded = isFocused && suggestions && displaySuggestions && suggestions.length > 0;
      return import_react.default.createElement(
        "div",
        { role: "combobox", "aria-expanded": optionsExpanded ? "true" : "false", "aria-owns": this.uid, "aria-controls": this.uid, "aria-haspopup": "listbox", className: containerClassName || "react-dadata react-dadata__container" },
        import_react.default.createElement(
          "div",
          null,
          import_react.default.createElement(Component, __assign({ autoComplete: "off", className: "react-dadata__input" }, inputProps, { value: query, ref: function(input) {
            _this.textInput = input;
          }, onChange: this.handleInputChange, onKeyPress: this.handleInputKeyPress, onKeyDown: this.handleInputKeyDown, onFocus: this.handleInputFocus, onBlur: this.handleInputBlur }))
        ),
        optionsExpanded && import_react.default.createElement(
          "ul",
          { id: this.uid, "aria-expanded": true, role: "listbox", className: suggestionsClassName || "react-dadata__suggestions" },
          typeof hintText !== "undefined" && import_react.default.createElement("div", { className: hintClassName || "react-dadata__suggestion-note" }, hintText),
          suggestions.map(function(suggestion, index) {
            var suggestionClass = suggestionClassName || "react-dadata__suggestion";
            if (index === suggestionIndex) {
              suggestionClass += " ".concat(currentSuggestionClassName || "react-dadata__suggestion--current");
            }
            return import_react.default.createElement("button", { role: "option", "aria-selected": index === suggestionIndex ? "true" : "false", key: _this.getSuggestionKey(suggestion), onMouseDown: _this.onSuggestionClick.bind(_this, index), className: suggestionClass }, _this.renderOption(suggestion));
          })
        ),
        children
      );
    };
    return BaseSuggestions2;
  }(import_react.default.PureComponent)
);

// node_modules/react-dadata/dist/esm/HighlightWords.js
var import_react2 = __toESM(require_react());

// node_modules/highlight-words/dist/highlight-words.mjs
var IDX = 36;
var HEX = "";
while (IDX--) {
  HEX += IDX.toString(36);
}
function uid(len = 11) {
  let str = "";
  let num = len;
  while (num--) {
    str += HEX[Math.random() * 36 | 0];
  }
  return str;
}
var escapeRegexp = (term) => term.replace(/[|\\{}()[\]^$+*?.-]/g, (char) => `\\${char}`);
var termsToRegExpString = (terms) => terms.replace(/\s{2,}/g, " ").split(" ").join("|");
var regexpQuery = ({
  terms,
  matchExactly = false
}) => {
  if (typeof terms !== "string") {
    throw new TypeError("Expected a string");
  }
  const escapedTerms = escapeRegexp(terms.trim());
  return `(${matchExactly ? escapedTerms : termsToRegExpString(escapedTerms)})`;
};
var buildRegexp = ({
  terms,
  matchExactly = false
}) => {
  try {
    const fromString = /^([/~@;%#'])(.*?)\1([gimsuy]*)$/.exec(terms);
    if (fromString) {
      return new RegExp(fromString[2], fromString[3]);
    }
    return new RegExp(regexpQuery({ terms, matchExactly }), "ig");
  } catch (e) {
    throw new TypeError("Expected terms to be either a string or a RegExp!");
  }
};
var hasProp = (prop) => (obj) => obj !== null && typeof obj === "object" && prop in obj;
var hasMatch = hasProp("match");
var chunkExists = (chunk) => typeof chunk !== "undefined";
function clip({
  curr,
  next,
  prev,
  clipBy = 3
}) {
  const words = curr.text.split(" ");
  const len = words.length;
  if (curr.match || clipBy >= len) {
    return curr.text;
  }
  const ellipsis = "...";
  if (chunkExists(next) && chunkExists(prev) && hasMatch(prev) && hasMatch(next)) {
    if (len > clipBy * 2) {
      return [
        ...words.slice(0, clipBy),
        ellipsis,
        ...words.slice(-clipBy)
      ].join(" ");
    }
    return curr.text;
  }
  if (chunkExists(next) && hasMatch(next)) {
    return [ellipsis, ...words.slice(-clipBy)].join(" ");
  }
  if (chunkExists(prev) && hasMatch(prev)) {
    return [...words.slice(0, clipBy), ellipsis].join(" ");
  }
  return curr.text;
}
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var hasLength = (str) => str.length > 0;
var highlightWords = ({
  text,
  query,
  clipBy,
  matchExactly = false
}) => {
  const safeQuery = typeof query === "string" ? query.trim() : query;
  if (safeQuery === "") {
    return [
      {
        key: uid(),
        text,
        match: false
      }
    ];
  }
  const searchRegexp = buildRegexp({ terms: query, matchExactly });
  return text.split(searchRegexp).filter(hasLength).map((str) => ({
    // Compose the object for a match
    key: uid(),
    text: str,
    match: matchExactly ? str.toLowerCase() === safeQuery.toLowerCase() : searchRegexp.test(str)
  })).map((chunk, index, chunks) => __spreadValues(__spreadValues({}, chunk), typeof clipBy === "number" && {
    // We only overwrite the text if there is a clip
    text: clip(__spreadProps(__spreadValues(__spreadValues({
      curr: chunk
    }, index < chunks.length - 1 && { next: chunks[index + 1] }), index > 0 && { prev: chunks[index - 1] }), {
      // If this wasn't the first chunk, set the previous chunk
      clipBy
    }))
  }));
};

// node_modules/react-dadata/dist/esm/HighlightWords.js
var __extends3 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var HighlightWords = (
  /** @class */
  function(_super) {
    __extends3(HighlightWords2, _super);
    function HighlightWords2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    HighlightWords2.prototype.render = function() {
      var _a = this.props, text = _a.text, words = _a.words, highlightClassName = _a.highlightClassName, _b = _a.tagName, tagName = _b === void 0 ? "span" : _b;
      var query = typeof words === "string" ? words : words.join(" ");
      var chunks = highlightWords({ text, query });
      return import_react2.default.createElement("span", { "aria-label": text }, chunks.map(function(chunk) {
        if (!chunk.match) {
          return import_react2.default.createElement("span", { key: chunk.key, "aria-hidden": true }, chunk.text);
        }
        var Component = tagName;
        return import_react2.default.createElement(Component, { key: chunk.key, className: highlightClassName, "aria-hidden": true }, chunk.text);
      }));
    };
    return HighlightWords2;
  }(import_react2.PureComponent)
);

// node_modules/react-dadata/dist/esm/AddressSuggestions.js
var __extends4 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var AddressSuggestions = (
  /** @class */
  function(_super) {
    __extends4(AddressSuggestions2, _super);
    function AddressSuggestions2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.loadSuggestionsUrl = "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/address";
      _this.getLoadSuggestionsData = function() {
        var _a = _this.props, count = _a.count, filterFromBound = _a.filterFromBound, filterToBound = _a.filterToBound, filterLocations = _a.filterLocations, filterLocationsBoost = _a.filterLocationsBoost, filterLanguage = _a.filterLanguage, filterRestrictValue = _a.filterRestrictValue;
        var query = _this.state.query;
        var requestPayload = {
          query,
          count: count || 10
        };
        if (filterFromBound && filterToBound) {
          requestPayload.from_bound = { value: filterFromBound };
          requestPayload.to_bound = { value: filterToBound };
        }
        if (filterLanguage) {
          requestPayload.language = filterLanguage;
        }
        if (filterLocations) {
          requestPayload.locations = filterLocations;
        }
        if (filterLocationsBoost) {
          requestPayload.locations_boost = filterLocationsBoost;
        }
        if (filterRestrictValue) {
          requestPayload.restrict_value = true;
        }
        return requestPayload;
      };
      _this.renderOption = function(suggestion) {
        var _a = _this.props, renderOption = _a.renderOption, highlightClassName = _a.highlightClassName;
        var query = _this.state.query;
        return renderOption ? renderOption(suggestion, query) : import_react3.default.createElement(HighlightWords, { highlightClassName: highlightClassName || "react-dadata--highlighted", words: _this.getHighlightWords(), tagName: "mark", text: suggestion.value });
      };
      return _this;
    }
    return AddressSuggestions2;
  }(BaseSuggestions)
);

// node_modules/react-dadata/dist/esm/PartySuggestions.js
var import_react4 = __toESM(require_react());
var __extends5 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var PartySuggestions = (
  /** @class */
  function(_super) {
    __extends5(PartySuggestions2, _super);
    function PartySuggestions2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.loadSuggestionsUrl = "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/party";
      _this.getLoadSuggestionsData = function() {
        var _a = _this.props, count = _a.count, filterStatus = _a.filterStatus, filterType = _a.filterType, filterOkved = _a.filterOkved, filterLocations = _a.filterLocations, filterLocationsBoost = _a.filterLocationsBoost;
        var query = _this.state.query;
        var requestPayload = {
          query,
          count: count || 10
        };
        if (filterStatus) {
          requestPayload.status = filterStatus;
        }
        if (filterOkved) {
          requestPayload.okved = filterOkved;
        }
        if (filterType) {
          requestPayload.type = filterType;
        }
        if (filterLocations) {
          requestPayload.locations = filterLocations;
        }
        if (filterLocationsBoost) {
          requestPayload.locations_boost = filterLocationsBoost;
        }
        return requestPayload;
      };
      _this.getSuggestionKey = function(suggestion) {
        return suggestion.data.hid;
      };
      _this.renderOption = function(suggestion) {
        var _a = _this.props, renderOption = _a.renderOption, highlightClassName = _a.highlightClassName;
        var query = _this.state.query;
        return renderOption ? renderOption(suggestion, query) : import_react4.default.createElement(
          "div",
          null,
          import_react4.default.createElement(
            "div",
            { className: suggestion.data.state.status === "LIQUIDATED" ? "react-dadata__suggestion--line-through" : void 0 },
            import_react4.default.createElement(HighlightWords, { highlightClassName: highlightClassName || "react-dadata--highlighted", words: _this.getHighlightWords(), text: suggestion.value })
          ),
          import_react4.default.createElement(
            "div",
            { className: "react-dadata__suggestion-subtitle" },
            suggestion.data.inn && import_react4.default.createElement("div", { className: "react-dadata__suggestion-subtitle-item" }, suggestion.data.inn),
            suggestion.data.address && suggestion.data.address.value && import_react4.default.createElement(
              "div",
              { className: "react-dadata__suggestion-subtitle-item" },
              import_react4.default.createElement(HighlightWords, { highlightClassName: highlightClassName || "react-dadata--highlighted", words: _this.getHighlightWords(), text: suggestion.data.address.value })
            )
          )
        );
      };
      return _this;
    }
    return PartySuggestions2;
  }(BaseSuggestions)
);

// node_modules/react-dadata/dist/esm/BankSuggestions.js
var import_react5 = __toESM(require_react());
var __extends6 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var BankSuggestions = (
  /** @class */
  function(_super) {
    __extends6(BankSuggestions2, _super);
    function BankSuggestions2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.loadSuggestionsUrl = "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/bank";
      _this.getLoadSuggestionsData = function() {
        var _a = _this.props, count = _a.count, filterStatus = _a.filterStatus, filterType = _a.filterType, filterLocations = _a.filterLocations, filterLocationsBoost = _a.filterLocationsBoost;
        var query = _this.state.query;
        var requestPayload = {
          query,
          count: count || 10
        };
        if (filterStatus) {
          requestPayload.status = filterStatus;
        }
        if (filterType) {
          requestPayload.type = filterType;
        }
        if (filterLocations) {
          requestPayload.locations = filterLocations;
        }
        if (filterLocationsBoost) {
          requestPayload.locations_boost = filterLocationsBoost;
        }
        return requestPayload;
      };
      _this.getSuggestionKey = function(suggestion) {
        return "".concat(suggestion.data.bic);
      };
      _this.renderOption = function(suggestion) {
        var _a = _this.props, renderOption = _a.renderOption, highlightClassName = _a.highlightClassName;
        var query = _this.state.query;
        return renderOption ? renderOption(suggestion, query) : import_react5.default.createElement(
          "div",
          null,
          import_react5.default.createElement(
            "div",
            { className: suggestion.data.state.status === "LIQUIDATED" ? "react-dadata__suggestion--line-through" : void 0 },
            import_react5.default.createElement(HighlightWords, { highlightClassName: highlightClassName || "react-dadata--highlighted", words: _this.getHighlightWords(), text: suggestion.value })
          ),
          import_react5.default.createElement(
            "div",
            { className: "react-dadata__suggestion-subtitle" },
            suggestion.data.bic && import_react5.default.createElement("div", { className: "react-dadata__suggestion-subtitle-item" }, suggestion.data.bic),
            suggestion.data.address && suggestion.data.address.value && import_react5.default.createElement(
              "div",
              { className: "react-dadata__suggestion-subtitle-item" },
              import_react5.default.createElement(HighlightWords, { highlightClassName: highlightClassName || "react-dadata--highlighted", words: _this.getHighlightWords(), text: suggestion.data.address.value })
            )
          )
        );
      };
      return _this;
    }
    return BankSuggestions2;
  }(BaseSuggestions)
);

// node_modules/react-dadata/dist/esm/FioSuggestions.js
var import_react6 = __toESM(require_react());
var __extends7 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var FioSuggestions = (
  /** @class */
  function(_super) {
    __extends7(FioSuggestions2, _super);
    function FioSuggestions2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.loadSuggestionsUrl = "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/fio";
      _this.getLoadSuggestionsData = function() {
        var _a = _this.props, count = _a.count, filterGender = _a.filterGender, filterParts = _a.filterParts;
        var query = _this.state.query;
        var requestPayload = {
          query,
          count: count || 10
        };
        if (filterGender) {
          requestPayload.gender = filterGender;
        }
        if (filterParts) {
          requestPayload.parts = filterParts;
        }
        return requestPayload;
      };
      _this.getSuggestionKey = function(suggestion) {
        return "name:".concat(suggestion.data.name || "", "surname:").concat(suggestion.data.surname || "", "patronymic:").concat(suggestion.data.patronymic || "");
      };
      _this.renderOption = function(suggestion) {
        var _a = _this.props, renderOption = _a.renderOption, highlightClassName = _a.highlightClassName;
        var query = _this.state.query;
        return renderOption ? renderOption(suggestion, query) : import_react6.default.createElement(
          "div",
          null,
          import_react6.default.createElement(HighlightWords, { highlightClassName: highlightClassName || "react-dadata--highlighted", words: _this.getHighlightWords(), text: suggestion.value })
        );
      };
      return _this;
    }
    return FioSuggestions2;
  }(BaseSuggestions)
);

// node_modules/react-dadata/dist/esm/EmailSuggestions.js
var import_react7 = __toESM(require_react());
var __extends8 = /* @__PURE__ */ function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var EmailSuggestions = (
  /** @class */
  function(_super) {
    __extends8(EmailSuggestions2, _super);
    function EmailSuggestions2() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.loadSuggestionsUrl = "https://suggestions.dadata.ru/suggestions/api/4_1/rs/suggest/email";
      _this.getLoadSuggestionsData = function() {
        var count = _this.props.count;
        var query = _this.state.query;
        return {
          query,
          count: count || 10
        };
      };
      _this.getSuggestionKey = function(suggestion) {
        return suggestion.value;
      };
      _this.renderOption = function(suggestion) {
        var _a = _this.props, renderOption = _a.renderOption, highlightClassName = _a.highlightClassName;
        var query = _this.state.query;
        return renderOption ? renderOption(suggestion, query) : import_react7.default.createElement(
          "div",
          null,
          import_react7.default.createElement(HighlightWords, { highlightClassName: highlightClassName || "react-dadata--highlighted", words: _this.getHighlightWords(), text: suggestion.value })
        );
      };
      return _this;
    }
    return EmailSuggestions2;
  }(BaseSuggestions)
);
export {
  AddressSuggestions,
  BankSuggestions,
  EmailSuggestions,
  FioSuggestions,
  HttpCache,
  PartySuggestions
};
//# sourceMappingURL=react-dadata.js.map
