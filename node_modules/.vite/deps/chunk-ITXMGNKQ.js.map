{
  "version": 3,
  "sources": ["../../@mui/x-date-pickers-pro/SingleInputDateRangeField/useSingleInputDateRangeField.js", "../../@mui/x-date-pickers-pro/internals/utils/valueManagers.js", "../../@mui/x-date-pickers-pro/internals/utils/date-fields-utils.js", "../../@mui/x-date-pickers-pro/internals/utils/validation/validateDateRange.js", "../../@mui/x-date-pickers-pro/internals/utils/date-utils.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useUtils, useDefaultDates, applyDefaultDate, useField, splitFieldInternalAndForwardedProps } from '@mui/x-date-pickers/internals';\nimport { rangeValueManager, rangeFieldValueManager } from '../internals/utils/valueManagers';\nimport { validateDateRange } from '../internals/utils/validation/validateDateRange';\nexport const useDefaultizedDateRangeFieldProps = props => {\n  var _props$disablePast, _props$disableFuture, _props$format;\n  const utils = useUtils();\n  const defaultDates = useDefaultDates();\n  return _extends({}, props, {\n    disablePast: (_props$disablePast = props.disablePast) != null ? _props$disablePast : false,\n    disableFuture: (_props$disableFuture = props.disableFuture) != null ? _props$disableFuture : false,\n    format: (_props$format = props.format) != null ? _props$format : utils.formats.keyboardDate,\n    minDate: applyDefaultDate(utils, props.minDate, defaultDates.minDate),\n    maxDate: applyDefaultDate(utils, props.maxDate, defaultDates.maxDate)\n  });\n};\nexport const useSingleInputDateRangeField = ({\n  props: inProps,\n  inputRef\n}) => {\n  const props = useDefaultizedDateRangeFieldProps(inProps);\n  const {\n    forwardedProps,\n    internalProps\n  } = splitFieldInternalAndForwardedProps(props, 'date');\n  return useField({\n    inputRef,\n    forwardedProps,\n    internalProps,\n    valueManager: rangeValueManager,\n    fieldValueManager: rangeFieldValueManager,\n    validator: validateDateRange,\n    valueType: 'date'\n  });\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"value\", \"referenceDate\"];\nimport { replaceInvalidDateByNull, addPositionPropertiesToSections, createDateStrForInputFromSections, areDatesEqual, getTodayDate, getDefaultReferenceDate } from '@mui/x-date-pickers/internals';\nimport { splitDateRangeSections, removeLastSeparator } from './date-fields-utils';\nexport const rangeValueManager = {\n  emptyValue: [null, null],\n  getTodayValue: (utils, timezone, valueType) => [getTodayDate(utils, timezone, valueType), getTodayDate(utils, timezone, valueType)],\n  getInitialReferenceValue: _ref => {\n    let {\n        value,\n        referenceDate: referenceDateProp\n      } = _ref,\n      params = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const shouldKeepStartDate = value[0] != null && params.utils.isValid(value[0]);\n    const shouldKeepEndDate = value[1] != null && params.utils.isValid(value[1]);\n    if (shouldKeepStartDate && shouldKeepEndDate) {\n      return value;\n    }\n    const referenceDate = referenceDateProp != null ? referenceDateProp : getDefaultReferenceDate(params);\n    return [shouldKeepStartDate ? value[0] : referenceDate, shouldKeepEndDate ? value[1] : referenceDate];\n  },\n  cleanValue: (utils, value) => value.map(date => replaceInvalidDateByNull(utils, date)),\n  areValuesEqual: (utils, a, b) => areDatesEqual(utils, a[0], b[0]) && areDatesEqual(utils, a[1], b[1]),\n  isSameError: (a, b) => b !== null && a[1] === b[1] && a[0] === b[0],\n  hasError: error => error[0] != null || error[1] != null,\n  defaultErrorState: [null, null],\n  getTimezone: (utils, value) => {\n    const timezoneStart = value[0] == null || !utils.isValid(value[0]) ? null : utils.getTimezone(value[0]);\n    const timezoneEnd = value[1] == null || !utils.isValid(value[1]) ? null : utils.getTimezone(value[1]);\n    if (timezoneStart != null && timezoneEnd != null && timezoneStart !== timezoneEnd) {\n      throw new Error('MUI: The timezone of the start and the end date should be the same');\n    }\n    return timezoneStart != null ? timezoneStart : timezoneEnd;\n  },\n  setTimezone: (utils, timezone, value) => [value[0] == null ? null : utils.setTimezone(value[0], timezone), value[1] == null ? null : utils.setTimezone(value[1], timezone)]\n};\nexport const rangeFieldValueManager = {\n  updateReferenceValue: (utils, value, prevReferenceValue) => {\n    const shouldKeepStartDate = value[0] != null && utils.isValid(value[0]);\n    const shouldKeepEndDate = value[1] != null && utils.isValid(value[1]);\n    if (!shouldKeepStartDate && !shouldKeepEndDate) {\n      return prevReferenceValue;\n    }\n    if (shouldKeepStartDate && shouldKeepEndDate) {\n      return value;\n    }\n    if (shouldKeepStartDate) {\n      return [value[0], prevReferenceValue[0]];\n    }\n    return [prevReferenceValue[1], value[1]];\n  },\n  getSectionsFromValue: (utils, [start, end], fallbackSections, isRTL, getSectionsFromDate) => {\n    const separatedFallbackSections = fallbackSections == null ? {\n      startDate: null,\n      endDate: null\n    } : splitDateRangeSections(fallbackSections);\n    const getSections = (newDate, fallbackDateSections, position) => {\n      const shouldReUsePrevDateSections = !utils.isValid(newDate) && !!fallbackDateSections;\n      if (shouldReUsePrevDateSections) {\n        return fallbackDateSections;\n      }\n      const sections = getSectionsFromDate(newDate);\n      return sections.map((section, sectionIndex) => {\n        if (sectionIndex === sections.length - 1 && position === 'start') {\n          return _extends({}, section, {\n            dateName: position,\n            endSeparator: `${section.endSeparator}${isRTL ? '\\u2069 – \\u2066' : ' – '}`\n          });\n        }\n        return _extends({}, section, {\n          dateName: position\n        });\n      });\n    };\n    return addPositionPropertiesToSections([...getSections(start, separatedFallbackSections.startDate, 'start'), ...getSections(end, separatedFallbackSections.endDate, 'end')], isRTL);\n  },\n  getValueStrFromSections: (sections, isRTL) => {\n    const dateRangeSections = splitDateRangeSections(sections);\n    return createDateStrForInputFromSections([...dateRangeSections.startDate, ...dateRangeSections.endDate], isRTL);\n  },\n  parseValueStr: (valueStr, referenceValue, parseDate) => {\n    // TODO: Improve because it would not work if the date format has `–` as a separator.\n    const [startStr, endStr] = valueStr.split('–');\n    return [startStr, endStr].map((dateStr, index) => {\n      if (dateStr == null) {\n        return null;\n      }\n      return parseDate(dateStr.trim(), referenceValue[index]);\n    });\n  },\n  getActiveDateManager: (utils, state, activeSection) => {\n    const index = activeSection.dateName === 'start' ? 0 : 1;\n    const updateDateInRange = (newDate, prevDateRange) => index === 0 ? [newDate, prevDateRange[1]] : [prevDateRange[0], newDate];\n    return {\n      date: state.value[index],\n      referenceDate: state.referenceValue[index],\n      getSections: sections => {\n        const dateRangeSections = splitDateRangeSections(sections);\n        if (index === 0) {\n          return removeLastSeparator(dateRangeSections.startDate);\n        }\n        return dateRangeSections.endDate;\n      },\n      getNewValuesFromNewActiveDate: newActiveDate => ({\n        value: updateDateInRange(newActiveDate, state.value),\n        referenceValue: newActiveDate == null || !utils.isValid(newActiveDate) ? state.referenceValue : updateDateInRange(newActiveDate, state.referenceValue)\n      })\n    };\n  }\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport const splitDateRangeSections = sections => {\n  const startDateSections = [];\n  const endDateSections = [];\n  sections.forEach(section => {\n    if (section.dateName === 'start') {\n      startDateSections.push(section);\n    } else {\n      endDateSections.push(section);\n    }\n  });\n  return {\n    startDate: startDateSections,\n    endDate: endDateSections\n  };\n};\nexport const removeLastSeparator = dateSections => dateSections.map((section, sectionIndex) => {\n  if (sectionIndex === dateSections.length - 1) {\n    return _extends({}, section, {\n      separator: null\n    });\n  }\n  return section;\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"shouldDisableDate\"];\nimport { validateDate } from '@mui/x-date-pickers/internals';\nimport { isRangeValid } from '../date-utils';\nexport const validateDateRange = ({\n  props,\n  value,\n  adapter\n}) => {\n  const [start, end] = value;\n  const {\n      shouldDisableDate\n    } = props,\n    otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n  const dateValidations = [validateDate({\n    adapter,\n    value: start,\n    props: _extends({}, otherProps, {\n      shouldDisableDate: day => !!(shouldDisableDate != null && shouldDisableDate(day, 'start'))\n    })\n  }), validateDate({\n    adapter,\n    value: end,\n    props: _extends({}, otherProps, {\n      shouldDisableDate: day => !!(shouldDisableDate != null && shouldDisableDate(day, 'end'))\n    })\n  })];\n  if (dateValidations[0] || dateValidations[1]) {\n    return dateValidations;\n  }\n\n  // for partial input\n  if (start === null || end === null) {\n    return [null, null];\n  }\n  if (!isRangeValid(adapter.utils, value)) {\n    return ['invalidRange', 'invalidRange'];\n  }\n  return [null, null];\n};", "export const isRangeValid = (utils, range) => {\n  return Boolean(range && range[0] && range[1] && !utils.isBefore(range[1], range[0]));\n};\nexport const isWithinRange = (utils, day, range) => {\n  return isRangeValid(utils, range) && utils.isWithinRange(day, range);\n};\nexport const isStartOfRange = (utils, day, range) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[0]);\n};\nexport const isEndOfRange = (utils, day, range) => {\n  return isRangeValid(utils, range) && utils.isSameDay(day, range[1]);\n};"],
  "mappings": "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",
  "names": ["_excluded"]
}
